#!/usr/bin/env bash

GITHUB_COPILOT_VIM_GITURL=https://github.com/github/copilot.vim.git
GITHUB_COPILOT_VIM_GITREF=release
GITHUB_COPILOT_VIM_DIR=${XDG_DATA_HOME:-$HOME/.local/share}/nvim/site/pack/github/start/copilot.vim

verbose() {
  if [[ -n "${VERBOSE-}" ]]; then
    printf "$0: %s\n" "$@"
  fi
} >&2


if [[ ${GITHUB_COPILOT_VIM_ENABLED:-false} ]]; then
  verbose "Skipping GitHub Copilot VIM plugin install... To install, set GITHUB_COPILOT_VIM_ENABLED=true and re-run."
  if [[ -d $GITHUB_COPILOT_VIM_DIR ]]; then
    verbose "Cleaning up previous GitHub Copilot install found at $GITHUB_COPILOT_VIM_DIR"
    if hash trash-put >/dev/null 2>&1; then
      trash-put "$GITHUB_COPILOT_VIM_DIR"
    else
      rm -I -rf "$GITHUB_COPILOT_VIM_DIR" 
    fi
  fi
  exit 0
fi

install_github_copilot_nvim_plugin() {
  if ! hash nvim 2>/dev/null; then
    verbose "nvim command not found. skipping..."
    return 1
  fi

  verbose "setting up $GITHUB_COPILOT_VIM_GITURL at $GITHUB_COPILOT_VIM_GITREF in $GITHUB_COPILOT_VIM_DIR"

  if [[ -d $GITHUB_COPILOT_VIM_DIR ]]; then
    git -C "$GITHUB_COPILOT_VIM_DIR" fetch --all --quiet
    git -C "$GITHUB_COPILOT_VIM_DIR" checkout --quiet origin/"$GITHUB_COPILOT_VIM_GITREF"
  else
    git clone \
      --quiet \
      --branch "$GITHUB_COPILOT_VIM_GITREF" \
      --depth 1 \
      "$GITHUB_COPILOT_VIM_GITURL" \
      "$GITHUB_COPILOT_VIM_DIR"
  fi
  verbose done.
}

install_github_copilot_nvim_plugin || true
