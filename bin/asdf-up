#!/usr/bin/env bash

# @file asdf-up.sh
# @brief Install and configure asdf version manager
# @description
#     This can be used to boostrap asdf on a clean machine.
#     Enables plugins to be configured via file.
#     Designed to be used as pre/post-up hook for [rcm](https://github.com/thoughtbot/rcm).
# @see https://asdf-vm.com

set -euo pipefail

[[ ${TRACE-} ]] && set -x

ASDF_DIR=${ASDF_DIR:-$HOME/.asdf}

function_exists() {
    declare -f -F "$1" > /dev/null
    return $?
}

msg() {
  printf "%s\n" "$@" >&2
}

function asdf-init() {
  if ! function_exists asdf; then
    if ! [[ -d $ASDF_DIR ]]; then
      msg "fetching asdf..."
      git clone https://github.com/asdf-vm/asdf "$ASDF_DIR"
    fi

    msg "Loading asdf..."
    # shellcheck source=/dev/null
    source "$ASDF_DIR/asdf.sh"
  fi

  if [[ -z ${ASDF_UP_SKIP_UPDATE-} ]]; then
    asdf update 2>/dev/null
  fi
}

function asdf-plugin-list-needed() {
  local file=${ASDF_DEFAULT_TOOL_VERSIONS_FILENAME:-$HOME/.tool-versions}

  [[ -f $file ]] || return 0

  # strip comments
  sed '/^[#;]/d' <"$file" | cut -d' ' -f1 | sort -s |
    comm -23 - <(asdf plugin list 2>/dev/null | sort -s) |
    join -a1 - <(asdf plugin list all 2>/dev/null | sed -e 's/initializing plugin repository\.\.\.\s+//g' | cut -d' ' -f1 | sort -s) |
    awk NF # filter blank lines
}

function asdf-up() {
  asdf-init

  msg "Checking for missing plugins..."
  local plugins_needed
  plugins_needed=$(asdf-plugin-list-needed)
  [[ -z $plugins_needed ]] || msg "Adding tool plugins: $plugins_needed"
  xargs -r asdf plugin add <<<"$plugins_needed"

  msg "done."
}

asdf-up
