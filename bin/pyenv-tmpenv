#!/usr/bin/env bash
#
# Summary: Create a temporary Python virtualenv using the pyenv-virtualenv plugin
#
# Usage: pyenv tmpenv [-f|--force] [VIRTUALENV_OPTIONS] [version] <virtualenv-name>
#        pyenv tmpenv --version
#        pyenv tmpenv --help
#
#   -f/--force       Install even if the version appears to be installed already
#

set -e
[ -n "$PYENV_DEBUG" ] && set -x

[[ $1 =~ ^(-h|--help)$ ]] && {
    pyenv-help --usage tmpenv >&2
    exit 0
}

pyenv_version=${1:-$(pyenv version-name)}
venv_name=${2:-$(mktemp -u -d "tmpenv-$pyenv_version-XXXXXX")}
prog="${PYENV_SHELL:-$SHELL}"

export PYENV_VIRTUALENV_VERBOSE_ACTIVATE=1

echo
echo "Creating temporary virtualenv '$venv_name' ($pyenv_version)..."
echo

pyenv virtualenv "$pyenv_version" "$venv_name" || {
    echo 'ERROR: pyenv-virtualenv command exited unsuccessfully' >&2
    exit 1
}

echo

PYENV_VERSION=$venv_name "${PYENV_SHELL:-$SHELL}"

echo
echo "Destroying temporary virtualenv '$venv_name'."
echo

pyenv uninstall -f "$venv_name"
