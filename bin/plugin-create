#!/bin/zsh
# vim: set ft=sh

FILE="$(basename $0)"

usage() {
  echo -e "usage: $FILE [options] <name>

options:
  -d, --description   short description of plugin
  -i, --include       file, directory, or url to to include
  -o, --edit          open editor after plugin created 
  -c, --copy          put plugin path to clipboard instread of printing it
  -h, --help          show brief help message
"
}

status() {
  >&2 echo -e "$FILE:" "$@"
}

die() {
  >&2 echo -e "$FILE:" "$@" "\n"
  >&2 usage
  exit ${2:-1}
}


declare -i edit=0
declare -i copy=0
declare name
declare -a file
declare description

while (( $# )); do
  case $1 in
    -h|--help)
      usage
      exit
      ;;
    -o|--edit)
      edit=1
      ;;
    -c|--copy)
      copy=1
      ;;
    -i|--include)
      include+=("$2")
      shift
      ;;
    -d|--description)
      description="$2"
      shift
      ;;
    -*)
      die "Invalid option: $1\n"
      ;;
    *)
      if [[ -n "$name" ]]; then
        die "Invalid argument: $1\n"
      fi
      name="$1"
      ;;
  esac
  shift
done

readonly PLUGIN_DIR="$ZSH_CUSTOM/plugins/$name"
readonly PLUGIN="$PLUGIN_DIR/$name.plugin.zsh"

[[ -n "$name" ]] || die "name: missing argument"
[[ -n "$ZSH_CUSTOM" ]] || die "ZSH_CUSTOM: not found in environment"
[[ -d "$PLUGIN_DIR" ]] && die "$name: plugin already exists at ${PLUGIN_DIR}"
[[ -f "$PLUGIN" ]] && die "${PLUGIN:a}: file already exists"

mkdir -p "$PLUGIN_DIR"
cat << EOF > "$PLUGIN_DIR/README.md"
  # $name

  $description
EOF

for arg in "${include[@]}"; do
  if [[ "${arg%%#*}" == *.git ]]; then
    repo=("${(@s/#/)$arg}")
    status "cloning" "${repo[@]}"
    git clone --recurse-submodules -- "${repo[1]}" "$PLUGIN_DIR" >&2 || die "$arg: failed to clone repository"
    if [[ -n "${repo[2]}" ]]; then
      git checkout "${repo[2]}"
    fi
  elif [[ "$arg" == http?://* ]]; then
    status "downloading" "$arg"
    wget --quiet --directory-prefix "$PLUGIN_DIR" -- "$arg" >&2 || die "$arg: failed to download"
  elif [[ -d "$ZSH/plugins/$arg" ]]; then
    status "copying" "$ZSH/plugins/$arg"
    cp -r "$ZSH/plugins/$arg" "$arg"
  fi
done

if [[ -t 0 ]]; then
  touch "$PLUGIN"
else
  cat >> "$PLUGIN"
fi

status "plugin created.\n"

if (( $copy == 0 )); then
  echo "$PLUGIN"
else
  case "$(uname -s)" in
    'Linux')
      echo "$PLUGIN" | xclip
      ;;
    'Darwin')
      echo "$PLUGIN" | pbcopy
      ;;
  esac
  echo "$(basename $PLUGIN): path copied to clipboard"
fi

if (( $edit )); then
  "$EDITOR" "$PLUGIN"
fi

