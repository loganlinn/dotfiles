#!/usr/bin/env bash
# @brief A script to run Node.js in a container. 
# @author: Logan Linn <logan@llinn.dev>

set -e

if [ -n "${TRACE:-}" ]; then set -x; fi

image="${CONTAINER_IMAGE:-node:${NODE_VERSION:-slim}}"
name="${CONTAINER_NAME:-$(basename -- "$0").$$}"
network="${CONTAINER_NETWORK:-host}"
runtime="${CONTAINER_RUNTIME:-$(which docker 2>/dev/null || which podman 2>/dev/null)}"

if [ -z "$runtime" ]; then
  echo >&2 "No docker or podman found in PATH"
  exit 1
fi

options=(
  --rm
  --interactive
  --tty
  --name "$name"
  --network "$network"
  --volume "$PWD":/workspace
  --workdir /workspace
  --env NPM_CONFIG_AUDIT=false \
  --env NPM_CONFIG_FUND=false \
  --env NPM_CONFIG_UPDATE_NOTIFIER=false
  --env NEXT_TELEMETRY_DISABLED=true
)

# add volume for host npm config directory, if it exists
npm_config="${NPM_CONFIG_USERCONFIG:-$HOME/.npmrc}"
if [ -f "$npm_config" ]; then
  options+=(--volume "$npm_config":/home/node/.npmrc --env NPM_CONFIG_USERCONFIG=/home/node/.npmrc)
fi

# append any custom options
if [ -n "${CONTAINER_OPTS:-}" ]; then
  # shellcheck disable=SC2206
  options+=($CONTAINER_OPTS)
fi

if [ $# -eq 0 ]; then
  # i.e. docker-node -> node
  default_command=$(basename -- "$0")
  default_command=${default_command#docker-}
  default_command=${default_command%.*}
  set -- "${CONTAINER_CMD:-$default_command}"
fi

exec "$runtime" run \
  --env-file <(env | grep -E '^(NODE_.+|NPM_CONFIG_.+|YARN_.+|HTTPS?_PROXY)$' | grep -v NPM_CONFIG_USERCONFIG) \
  "${options[@]}" "$image" "$@"
