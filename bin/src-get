#!/usr/bin/env bash

set -eo pipefail
[[ -n ${TRACE+x} ]] && set -x

log() { printf >&2 '%s\n' "$*"; }

SRC_HOME=${SRC_HOME:-$HOME/src}
GIT_PROTOCOL_DEFAULT=https
GIT_HOSTNAME_DEFAULT=github.com

src-url() {
	local input=$1

	if [[ $input == - ]]; then
		input=$(</dev/stdin)
	fi

	case "$input" in
	*://*) # i.e. https://github.com/loganlinn/dotfiles
		printf "%s" "$input"
		;;
	*.*/*) # i.e. github.com/loganlinn/dotfiles
		printf "%s://%s" "$GIT_PROTOCOL_DEFAULT" "$input"
		;;
	*/*) # i.e. loganlinn/dotfiles
		printf "%s://%s/%s" "$GIT_PROTOCOL_DEFAULT" "$GIT_HOSTNAME_DEFAULT" "$input"
		;;
	*) # i.e. loganlinn
		input=$(gh repo list "$input" | fzf | cut -f1)
		printf "%s://%s/%s" "$GIT_PROTOCOL_DEFAULT" "$GIT_HOSTNAME_DEFAULT" "$input"
		;;
	esac
}

src-clone() {
	log "git clone $*"
	git clone --recurse-submodules -- "$url" "$path"
}

src-get() {
	local url
	local path

	for repo; do
		url=$(src-url "$repo")

		# strip protocol and extension
		path=$SRC_HOME/${url#*://}
		path=${path%%.git}

		[[ -d $path ]] || src-clone "$url" "$path" >&2

		printf '%s\n' "$path"
	done
}

src-get "$@"
