#!/usr/bin/env zsh

# zmodload zsh/zprof

################################################################################
# environment variables
################################################################################

export DOTFILES=$HOME/.dotfiles
export PROJECTS=$HOME/code

export PATH="$HOME/bin:$PATH"
export PATH="$DOTFILES/bin:$PATH"

export EDITOR='vim'

case "$(uname -s)" in
  'Linux')
    export PLATFORM='linux'
    ;;
  'Darwin')
    export PLATFORM='osx'
    ;;
esac

export SHELL="$(command -v zsh)"


################################################################################
# autoload
################################################################################

autoload -U compinit && compinit
autoload -U bashcompinit && bashcompinit
autoload -U $DOTFILES/functions/*(:t) # TODO look into zplug lazy (https://github.com/zplug/zplug/wiki/Configurations#lazy-tag)
################################################################################
# zplug
################################################################################

if [[ ! -d ~/.zplug ]]; then
  git clone https://github.com/zplug/zplug ~/.zplug
  source ~/.zplug/init.zsh && zplug update --self
fi

source ~/.zplug/init.zsh

zplug "mafredri/zsh-async", from:github
zplug "loganlinn/5b506c9c708859ad99a766842dbce9a8", from:gist
zplug "loganlinn/6203339d487e41a651e877ad14aeaa62", from:gist
zplug "plugins/aws", from:oh-my-zsh
zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/dotenv", from:oh-my-zsh
zplug "plugins/fzf", from:oh-my-zsh
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/github", from:oh-my-zsh
zplug "plugins/gpg-agent", from:oh-my-zsh
zplug "plugins/jenv", from:oh-my-zsh
zplug "plugins/keychain", from:oh-my-zsh
zplug "plugins/kubectl", from:oh-my-zsh
zplug "plugins/osx", from:oh-my-zsh
zplug "plugins/pip", from:oh-my-zsh
zplug "plugins/pyenv", from:oh-my-zsh
zplug "plugins/rust", from:oh-my-zsh
zplug "plugins/safe-paste", from:oh-my-zsh
zplug "plugins/terraform", from:oh-my-zsh
zplug "plugins/urltools", from:oh-my-zsh
zplug "plugins/vi-mode", from:oh-my-zsh
zplug "plugins/web-search", from:oh-my-zsh
zplug "plugins/zsh_reload", from:oh-my-zsh
zplug "sirhc/okta.plugin.zsh"
zplug "sirhc/op.plugin.zsh"
zplug "wfxr/forgit"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-history-substring-search"

zplug 'reconquest/shdoc', as:command
zplug "mrowa44/emojify", as:command

zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme

# Install packages that have not been installed yet
if ! zplug check --verbose; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug install
  else
    echo
  fi
fi

zplug load

################################################################################
# aliases
#################################################################################

# suffixes
alias -s {yml,yaml}=$EDITOR
alias -s {zip,whl}=unzip

alias g='$(brew --prefix)/bin/gw' # && compdef g='gradle'
alias k='kubectl'
alias l='ls -lh'
alias sudo='sudo ' # allow aliases to be used with sudo
alias zshconfig="$EDITOR ~/.zshrc"
alias zshdir="$EDITOR $ZSH"

#--------------------------------------------------------------------------------
# anaconda
#--------------------------------------------------------------------------------

# @decription setup current shell to use anaconda
conda-shell() {
  __conda_home="$HOME/.pyenv/versions/miniconda3-4.3.30"
  __conda_setup="$("$__conda_home/bin/conda" 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "$__conda_home/etc/profile.d/conda.sh" ]; then
          source "$__conda_home/etc/profile.d/conda.sh"
      else
          export PATH="$__conda_home/bin:$PATH"
      fi
  fi
  unset __conda_setup
  unset __conda_home
}

#--------------------------------------------------------------------------------
# git
#--------------------------------------------------------------------------------

alias gl='git pull --prune'
alias glr='git pull --rebase'
alias gp='git push -u'
alias glrp='glr && gp'
alias gd='git diff --color'
alias gs='git status -sb'
alias gw="git show"
alias gsp="git stash pop"
alias gsw="git stash show -p"

# @description checkout branch if given, otherwise choose interactively from recent branches
# @arg $1 string branch
# @arg $@ any git-checkout args
function gcob() {
  if [ $# -eq 0 ]; then
    local branches branch
    branches="$(git branch --sort=-committerdate)" &&
      branch="$(echo "$branches" | fzf-tmux -d 15 +m)"
    if [ $? -eq 0 ]; then
      git checkout "$(echo "$branch" | sed "s/.* //")"
    fi
  else
    git checkout -B "$@"
  fi
}

#--------------------------------------------------------------------------------
# tmux
#--------------------------------------------------------------------------------

# direnv & tmux: wrap tmux to avoid issues with environment loading
# (source: https://git.io/Jfmfu)
if (( $+commands[direnv] )); then
  alias tmux='direnv exec / tmux'
fi

# @description attaches or creates tmux session; detaches other clients.
function tma() {
  tmux new-session -ADs "${1:-main}"
}

################################################################################
# localrc
################################################################################

if [[ -a ~/.localrc ]]; then
  source ~/.localrc
fi

# zprof
