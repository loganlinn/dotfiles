# ~/.shrc: user-specific run commands for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).
#

command_exists() {
	command -v "$1" >/dev/null 2>&1
}

function_exists() {
	command -V "$1" >/dev/null 2>&1
}

[ -n "$ENV" ] || . "$HOME"/.profile

if command_exists lsd; then
	alias ls=lsd
else
	alias ls='ls -lh --color=auto --group-directories-first --classify'
fi
alias l='ls -lah'
alias ll='ls -lh'
alias la='ls -lAh'

alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -I'
alias ln='ln -i'

alias :q='exit'

## directory navigation
alias -- -='cd -'
alias 1='cd -'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'

alias inst='date --utc --iso-8601=seconds'

alias mounts='mount | column -t | sort'
alias ports='netstat -tulanp'

alias less='less -FXr'
alias diff='diff --color=auto'

alias grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'

# allow aliases to be used with sudo
alias sudo='sudo '

# paths a la printenv(1)
alias printpath='echo $PATH | tr -s ":" "\n"'
alias printfpath='echo $FPATH | tr -s ":" "\n"'

if command_exists xsel; then
	alias cbc='xsel -i -b'
	alias cbp='xsel -o -b'
elif command_exists pbcopy; then
	alias cbc='pbcopy'
	alias cbp='pbpaste'
fi

# html man pages
manh() {
  file=$(mktemp)
  man --html=cat $1 > $file 2>/dev/null
  if [[ -s $file ]]; then
    ${BROWSER?} $file 2>/dev/null
  else
    echo "no man page for '$1'"
  fi
}

## emacs
# run emacs in a new session
# this way closing the shell it was started from won't
# kill emacs, nor will it usurp the shell
e() {
  if [ $# -eq 0 ]; then
    set -- $(fzf -m) || return $?
  fi
  if [ "${OSTYPE-}" = "Darwin" ]; then
    open -a emacs --args "$@"
  else
    ( setsid emacs "$@" > /dev/null 2>&1 & );
  fi
}
# TERM=xterm-direct assumes Emacs 27.1+ (see https://www.gnu.org/software/emacs/manual/html_node/efaq/Colors-on-a-TTY.html)
alias et='TERM=xterm-direct emacs -nw'
ediff() { et --eval "(ediff-files \"${1:-$(fzf --header=A)}\" \"${2:-$(fzf --header=B)}\")"; }
eman()  { et --eval "(switch-to-buffer (man \"${1:-$(compgen -c | fzf)}\"))"; }
ekill() { emacsclient --eval '(kill-emacs)'; }

## jq
alias jqr='jq -rc'

## git
alias gcob='git checkout -b'
alias gcop='git checkout -p'
alias gd='git diff --color'
alias gdc='gd --cached'
alias glr='git pull --rebase'
alias glrp='glr && gp'
alias gopen='git config --get remote.origin.url | sed -r -e '"'"'s|^git@([^:]+):|https://\1/|'"'"' -e '"'"'s|.git$||'"'"' | xargs xdg-open'
alias gp='git push -u'
alias gpa='git push all --all'
alias gs='git status -sb'
alias gsrt='git rev-parse --show-toplevel'
alias gsw='git stash show -p'
alias gw='git show'
alias gwt-ls="git worktree list --porcelain 2>/dev/null | awk '/^worktree / { print $2 }'"
alias gwt-rm="gwt-ls | fzf | ifne xargs git worktree remove"
alias gwt='git worktree'

if command_exists ag; then
	alias agl='ag -Q'
fi

if command_exists rg; then
	alias rgl='rg -F'
fi

if command_exists tree; then
	alias tree='tree -I .git -a'
elif command_exists lsd; then
  alias tree='lsd --tree'
fi

alias nix-gc="nix-collect-garbage -d"
alias nixq="nix-env -qaP"
alias hm='home-manager'

if command_exists kubectl; then
	alias k=kubectl
	alias kctx=kubectx
	alias krew='k krew'
	alias kusers='k config get-users'
	alias kdesc='k describe'
	alias kdoc='k describe'
	alias kinfo='k cluster-info'
	alias kcfg='k config view --raw'
	alias kk=kustomize
	alias kkb='kk build'
fi

# dotfiles
alias dotgit='git -C ~/.dotfiles'
alias dotsh='env -C ~/.dotfiles ${SHELL-bash}'
alias doted='env -C ~/.dotfiles ${EDITOR-editor}'
alias dote='e ~/.dotfiles'

if command_exists kitty; then
	case "$TERM" in
	xterm-kitty)
		alias kitten='kitty +kitten'
		alias icat='kitty +kitten icat'
		;;
	esac
fi

if command_exists direnv; then
	alias tmux='direnv exec / tmux'
fi

if command_exists journalctl; then
	alias jc='journalctl'
	alias jcu='journalctl --user-unit'
fi

if command_exists notify-send; then
	alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
fi

alias fd-git="fd --prune -HItd '^\\.git\$' -x echo {//} ';'"

if command_exists sops; then
  # Use a very basic editor when editing secrets (e.g. keep away from GitHub CoPilot)
	alias sops='EDITOR="vim -u NONE" sops'
fi

# https://github.com/clojure/tools.tools/blob/main/src/clojure/tools/tools/api.clj
alias clj-tool="clj -Ttools"
alias clj-tool-install="clj -Ttools install"
alias clj-tool-ls="clj -Ttools list"
alias clj-tool-show="clj -Ttools show :tool"
alias clj-tool-rm="clj -Ttools remove :tool"
# https://github.com/clojure/tools.deps.alpha/blob/master/src/main/clojure/clojure/tools/cli/api.clj
alias clj-find-versions="clj -X:deps find-versions"
alias clj-tool-versions="clj -X:deps find-versions :tool"
alias clj-lib-versions="clj -X:deps find-versions :lib"
# https://github.com/clojure/tools.deps.alpha/blob/master/src/main/clojure/clojure/tools/cli/help.clj
alias clj-doc="clj -X:deps help/doc"
alias clj-dir="clj -X:deps help/dir"
# babashka
alias bbr='rlwrap bb'

if ! command_exists inkscape; then
  alias inkscape=org.inkscape.Inkscape
fi

# TODO move src-get path so its more conventional
[ -e "$HOME/bin/src-get" ] &&
  . "$HOME/bin/src-get"
