#!/usr/bin/env bash
#
# @file   zoom
# @brief  Zoom Client for Linux installation script
# @author Logan Linn <logan@llinn.dev>
#

ZOOM_PKG_SIGNING_KEY_ID=B903BF1861A7C71D
ZOOM_PKG_SIGNING_KEY_URL=https://zoom.us/linux/download/pubkey
ZOOM_PKG_URL=https://zoom.us/client/latest/zoom_amd64.deb
ZOOM_PKG_FILE=${XDG_CACHE_HOME:-$HOME/.cache}/zoom/zoom_amd64.deb

say() {
  printf '%s\n' "$@"
}

err() {
    say "error: $1" >&2
    exit 1
}

has_command() {
  command -v "$1" >/dev/null 2>&1
}

require_command() {
  has_command "$1" || err "'$1' command is required"
}

has_key() {
  gpg --list-keys "$1" 2>/dev/null
}

require_command curl
require_command gpg
require_command dpkg
require_command dpkg-sig

ostype="$(uname -s)"
case "$ostype" in
  Linux*) true ;;
  *) err "Unsupported OS: $ostype" ;;
esac

cputype=$(uname -m)
case "$cputype" in
x86_64 | x86-64 | x64 | amd64) true ;;
*) err "Unsupported CPU: $cputype" ;;
esac

########

set -eo pipefail

say "Installing: Zoom Client for Linux"

say "→ Checking keyring for '$ZOOM_PKG_SIGNING_KEY_ID'..."
if has_key "$ZOOM_PKG_SIGNING_KEY_ID" 2>/dev/null; then
  say "→ Found Zoom package signing key '$ZOOM_PKG_SIGNING_KEY_ID'"
else
  say "→ Importing Zoom package signing key '$ZOOM_PKG_SIGNING_KEY_ID'"
  curl -sSLf "$ZOOM_PKG_SIGNING_KEY_URL" | gpg --import -
fi

say "→ Downloading '$ZOOM_PKG_URL'..."
mkdir -p "$(dirname -- "$ZOOM_PKG_FILE")"
curl -SLf -o "$ZOOM_PKG_FILE" --progress-bar "$ZOOM_PKG_URL"

say "→ Checking package signature..."
dpkg-sig "$ZOOM_PKG_FILE" || err "package signature could not be verified"
say "→ Package signature verified"

say "→ Installing package..."
sudo dpkg --install "$ZOOM_PKG_FILE"

say "→ Done!"
