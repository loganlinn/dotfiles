{:paths ["src"]

 :extra-paths [".llinn"]

 :deps
 {org.clojure/clojure {:mvn/version "1.10.3"}}

 :aliases
 {:dev
  {:extra-paths ["dev" "development"]}

  :classes
  {:extra-paths ["classes"]}

  :cljfmt
  {:main-opts ["-m" "cljfmt.main" "fix"]
   :extra-deps {cljfmt/cljfmt {:mvn/version "0.8.0"}}}

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; REPL and nREPL connections

  :dev/main
  {:jvm-opts ["-XX:-OmitStackTraceInFastThrow"]
   :extra-deps {fipp/fipp {:mvn/version "0.6.24"}}
   :main-opts ["-e" "(load-file,(str,(System/getProperty,\"user.home\"),\"/.config/clojure/dev.clj\"))"]}

  :+nrepl
  {:extra-deps {nrepl/nrepl {:mvn/version "RELEASE"}}}
  :nrepl/main
  {:main-opts  ["-m" "nrepl.cmdline"]}

  :+cider
  {:extra-deps {nrepl/nrepl {:mvn/version "RELEASE"}
                cider/cider-nrepl {:mvn/version "RELEASE"}
                refactor-nrepl/refactor-nrepl {:mvn/version "RELEASE"}}}
  :cider/main
  {:main-opts  ["-m" "nrepl.cmdline" "--middleware" "[refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]" "-i"]}

  :cider-nrepl
  {:extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}
                refactor-nrepl/refactor-nrepl {:mvn/version "3.5.2"}
                cider/cider-nrepl {:mvn/version "0.28.3"}}
   :main-opts ["-m" "nrepl.cmdline" "--middleware" "[cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]"]}


  ;; NOTE: avoid using `rebel-readlines` with `rlwrap`...
  ;;       i.e. prefer `clojure` over `clj` when using
  ;; See [[https://github.com/bhauman/rebel-readline]]
  :+rebel
  {:extra-deps {com.bhauman/rebel-readline {:mvn/version "RELEASE"}}}
  :rebel/main
  {:main-opts  ["-m" "rebel-readline.main"]}
  :rebel
  {:extra-deps {com.bhauman/rebel-readline {:mvn/version "RELEASE"}}
   :main-opts  ["-m" "rebel-readline.main"]}

  ;; Cognitect REBL
  ;;
  ;;     https://docs.datomic.com/cloud/other-tools/REBL.html
  ;;
  :rebl ;; for JDK 11+
  {:extra-deps {com.cognitect/rebl          {:mvn/version "0.9.242"}
                org.openjfx/javafx-fxml     {:mvn/version "15-ea+6"}
                org.openjfx/javafx-controls {:mvn/version "15-ea+6"}
                org.openjfx/javafx-swing    {:mvn/version "15-ea+6"}
                org.openjfx/javafx-base     {:mvn/version "15-ea+6"}
                org.openjfx/javafx-web      {:mvn/version "15-ea+6"}}
   :main-opts ["-m" "cognitect.rebl"]}
  :rebl-jdk8 ;; for JDK 8
  {:extra-deps {com.cognitect/rebl {:mvn/version "0.9.242"}}
   :main-opts ["-m" "cognitect.rebl"]}

  ;;;

  :clj-check ;; a la `lein check`
  {:extra-deps {athos/clj-check
                {:git/url "https://github.com/athos/clj-check.git"
                 :sha     "0ca84df1357d71429243b99908303f45a934654c"}}
   :main-opts  ["-m" "clj-check.check"]}

  :deps-try
  {:extra-deps {deps-try/deps-try
                {:git/url "https://gitlab.com/eval/deps-try"
                 :git/sha "9ccf64be248d5d9aa641df9e94feaea913bc0687"}}
   :main-opts ["-m" "deps-try.main"]}

  ;; find-deps - fuzzy search Maven & Clojars and add deps to deps.edn
  ;; https://github.com/hagmonk/find-deps
  ;; clojure -M:project/find-deps http-kit  # fuzzy search for dependency
  ;; clojure -M:project/find-deps http-kit ring compojure # multiple deps
  ;; clojure -M:project/find-deps -F:merge http-kit # merge dep into deps.edn file
  :find-deps
  {:extra-deps
   {find-deps/find-deps
    {:git/url "https://github.com/hagmonk/find-deps"
     :git/sha "9bf23a52cb0a8190c9c2c7ad1d796da802f8ce7a"}}
   :main-opts ["-m" "find-deps.core"]}

  ;; Visualizing dependencies in a project
  ;; https://github.com/clojure/tools.deps.graph
  ;; clojure -X:project/graph-deps
  :graph-deps
  {:replace-paths []
   :replace-deps  {org.clojure/tools.deps.graph {:mvn/version "1.0.63"}}
   :main-opts     ["-m" "clojure.tools.deps.graph"] ;; deprecated
   :ns-default    clojure.tools.deps.graph
   :exec-fn       graph
   :exec-args     {:output "project-dependencies-graph.png"
                   :size   true}}

  ;; Dependency version management
  ;; https://github.com/liquidz/antq
  ;; Manage versions for maven and git dependencies
  ;; - report project dependencies that have newer versions available:
  ;; cd project-directory && clojure -M:project/outdated
  ;; - update library versions in this deps.edn file:
  ;; cd ~/.clojure && clojure -M:project/outdated
  :project/outdated
  {:replace-paths []
   :replace-deps  {com.github.liquidz/antq {:mvn/version "1.0.0"}
                   org.slf4j/slf4j-nop     {:mvn/version "RELEASE"}}
   :main-opts     ["-m" "antq.core"]}

  ;; Carve - search through code for unused vars and remove them
  ;; clojure -M:project/unused --opts '{:paths ["src" "test"]}'
  :carve
  {:extra-deps {borkdude/carve {:mvn/version "RELEASE"}}
   :main-opts  ["-m" "carve.main"]}

  ;; Java Sources

  ;; Look up Java Class and method definitions, eg. `cider-find-var` in Emacs
  ;; Requires: Java sources installed locally
  ;; Examples are from Ubuntu package install locations

  ;; clojure -M:lib/java11-source
  :lib/java8-source
  {:extra-deps
   {openjdk/java-sources {:local/root "/usr/lib/jvm/openjdk-8/lib/src.zip"}}}

  :lib/java11-source
  {:extra-deps
   {openjdk/java-sources {:local/root "/usr/lib/jvm/openjdk-11/lib/src.zip"}}}

  ;; pretty printing capabilities for Clojure code and EDN
  ;; clojure -M:data/zprint filename
  :zprint
  {:extra-deps {zprint/zprint {:mvn/version "1.1.2"}}
   :main-opts  ["-m" "zprint.main"]}


  ;; https://github.com/djblue/portal
  :+portal 
  {:extra-deps {djblue/portal {:mvn/version "RELEASE"}}}

  :portal/main
  {:extra-deps {org.clojure/clojurescript {:mvn/version "RELEASE"}}
   :main-opts  ["-m" "cljs.main"]}

  :portal/node
  {:extra-deps {org.clojure/clojurescript {:mvn/version "RELEASE"}}
   :main-opts  ["-m" "cljs.main" "-re" "node"]}

  :reveal/main
  {:extra-deps {vlaaad/reveal {:mvn/version "RELEASE"}}
   :ns-default vlaaad.reveal
   :exec-fn    repl
   :main-opts  ["-m" "vlaaad.reveal" "repl"]}

  ;; Middleware
  ;; - start a non-interactive REPL with a headless nREPL server
  ;; clojure -M:middleware/nrepl
  :middleware/nrepl
  {:extra-deps {nrepl/nrepl {:mvn/version "0.8.3"}}
   :main-opts  ["-m" "nrepl.cmdline"]}

  ;; Run a REPL using nREPL server for access by cider-connect-clj
  ;; clojure -M:middleware/cider-clj
  :middleware/cider-clj
  {:extra-deps {nrepl/nrepl       {:mvn/version "0.8.3"}
                cider/cider-nrepl {:mvn/version "0.26.0"}}
   :main-opts  ["-m" "nrepl.cmdline"
                "--middleware" "[cider.nrepl/cider-middleware]"]}

  :middleware/cider-clj-refactor
  {:extra-deps {nrepl/nrepl                   {:mvn/version "0.8.3"}
                refactor-nrepl/refactor-nrepl {:mvn/version "3.0.0-pr301"}
                cider/cider-nrepl             {:mvn/version "0.26.0"}}
   :main-opts  ["-m" "nrepl.cmdline"
                "--middleware" "[refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]"]}

  ;; Run a REPL using nREPL server for access by cider-connect-cljs
  ;; clojure -M:middleware/cider-cljs
  ;; Using figwheel-main template and cider-connect-cljs: clojure -M:middleware/cider-cljs:fig
  :middleware/cider-cljs
  {:extra-deps {org.clojure/clojurescript {:mvn/version "1.10.844"}
                nrepl/nrepl               {:mvn/version "0.8.3"}
                cider/cider-nrepl         {:mvn/version "0.26.0"}
                cider/piggieback          {:mvn/version "0.5.2"}}
   :main-opts  ["-m" "nrepl.cmdline"
                "--middleware" "[cider.nrepl/cider-middleware,cider.piggieback/wrap-cljs-repl]"]}

  ;; nrebl.middleware - REBL with nREPL server
  ;; visualize evaluations over nREPL in REBL data browser (CIDER, Calva)
  ;; https://github.com/RickMoynihan/nrebl.middleware
  ;; Emacs cider `dir-locals.el` configuration
  ;; ((clojure-mode . ((cider-clojure-cli-global-options . "-M:lib/cider-nrepl:inspect/rebl:middleware/nrebl"))))

  ;; clojure -M:lib/cider-nrepl:inspect/rebl:middleware/nrebl
  :middleware/nrebl
  {:extra-deps {rickmoynihan/nrebl.middleware {:mvn/version "0.3.1"}}
   :main-opts  ["-e" "((requiring-resolve,'cognitect.rebl/ui))"
                "-m" "nrepl.cmdline"
                "-i"
                "--middleware" "[nrebl.middleware/wrap-nrebl,cider.nrepl/cider-middleware]"]}

  ;; Supporting aliases for nrebl.middleware
  :lib/cider-nrepl
  {:extra-deps {nrepl/nrepl                   {:mvn/version "0.8.3"}
                cider/cider-nrepl             {:mvn/version "0.26.0"}
                refactor-nrepl/refactor-nrepl {:mvn/version "3.0.0-pr301"}}}

  ;; Test runners

:test/kaocha {:extra-deps {lambdaisland/kaocha {:mvn/version "1.63.998"}}
              :main-opts  ["-m" "kaocha.runner"]
              :exec-fn    kaocha.runner/exec-fn}

  ;; Cognitect test-runner
  ;; https://github.com/cognitect-labs/test-runner
  ;; clojure -X:test/congnitect
  :test/cognitect
  {:extra-paths ["test"]
   :extra-deps  {io.github.cognitect-labs/test-runner
                 {:git/tag "v0.5.0" :git/sha "b3fd0d2"}}
   :main-opts   ["-m" "cognitect.test-runner"]
   :exec-fn cognitect.test-runner.api/test}

  ;; Linting/ static analysis

  ;; clj-kondo - comprehensive and fast linter
  ;; https://github.com/borkdude/clj-kondo/
  :lint/clj-kondo
  {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2021.08.06"}}
   :main-opts  ["-m" "clj-kondo.main" "--lint" "src"]}

  ;; Eastwood - classic lint tool
  ;; https://github.com/jonase/eastwood#running-eastwood-in-a-repl
  :lint/eastwood
  {:extra-deps {jonase/eastwood {:mvn/version "0.9.9"}}
   :main-opts  ["-m" "eastwood.lint"
                "{:source-paths,[\"src\"],:test-paths,[\"test\"]}"]}

  ;; kibit - suggest idiomatic use of Clojure
  ;; https://github.com/jonase/kibit/issues/221
  :lint/idiom
  {:replace-paths []
   :replace-deps  {tvaughan/kibit-runner {:mvn/version "1.0.1"}}
   :main-opts     ["-m" "kibit-runner.cmdline"]}

  ;; simple zero-configuration command-line HTTP files server.
  ;; https://github.com/kachayev/nasus
  :service/webserver
  {:replace-deps {nasus/nasus {:mvn/version "0.1.7"}}
   :main-opts    ["-m" "http.server"]}


  ;; Reflector - datafy and nav
  ;; https://github.com/stuarthalloway/reflector
  :alpha/reflect
  {:extra-deps {com.stuarthalloway/reflector
                {:git/url "https://github.com/stuarthalloway/reflector"
                 :sha     "93a0c19b4526c1180959e940202928d35e5c3cef"}}}

  ;; closh - bash shell with Clojure
  :alpha/closh
  {:extra-deps {closh/closh
                {:git/url "https://github.com/dundalek/closh.git"
                 :tag     "v0.5.0"
                 :sha     "b1a7fd310b6511048fbacb8e496f574c8ccfa291"}}
   :main-opts  ["-m" "closh.zero.frontend.rebel"]}} ;; End of alias definitions

 ;; Library Repositories

 ;; Specify a different local repository for maven (default `$HOME/.m2/repository)
 ;; :mvn/local-repo ".m2/repository"

 ;; `clojure -Spath` will show the current class path which will include the path to the local maven repository for the library dependencies.

 ;; Order in which repositories are consulted is not guaranteed, so only add essential repositories
 ;; Maven Central and Clojars are the canonical repositories for library dependencies
 ;; JCenter is large and fast mirror often accessible behind corporate firewalls

 :mvn/repos {"central" {:url "https://repo1.maven.org/maven2/"}
             "clojars" {:url "https://repo.clojars.org/"}

             ;; Clojure snapshots
             ;; "sonatype" {:url "https://oss.sonatype.org/content/repositories/snapshots/"}

             ;; clojars.org mirror - publicly accessible
             ;; "jcenter" {:url "https://jcenter.bintray.com"}

             ;; cognitect dev-tools (https://cognitect.com/dev-tools/view-creds.html)
             "cognitect-dev-tools" {:url "https://dev-tools.cognitect.com/maven/releases/"}

             ;; "patch-opz" {:url "https://pkgs.dev.azure.com/patch-opz/Patch/_packaging/custom-maven/maven/v1"}
             }}
